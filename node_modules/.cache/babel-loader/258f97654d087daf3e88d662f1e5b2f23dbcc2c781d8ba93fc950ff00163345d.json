{"ast":null,"code":"var _jsxFileName = \"D:\\\\Anonymous chat app\\\\anonymous-chat\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport PacketVisualization from './PacketVisualization';\n\n// Connect to backend server\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nconst App = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [packetFlow, setPacketFlow] = useState({});\n  const [isUsernameSet, setIsUsernameSet] = useState(false);\n  const handleSendMessage = () => {\n    if (!message.trim()) return;\n    const msg = {\n      sender: username,\n      receiver: 'all',\n      message\n    };\n    socket.emit('sendMessage', msg);\n    setMessage('');\n  };\n  const handleSetUsername = () => {\n    if (username.trim()) {\n      setIsUsernameSet(true);\n    }\n  };\n  useEffect(() => {\n    socket.on('receiveMessage', data => {\n      setMessages(prev => [...prev, data]);\n      const newPacketFlow = {\n        Application: `Message received: \"${data.message}\"`,\n        Transport: `Source port: 3001, Dest port: 8080`,\n        Network: `IP Packet from ${data.sender} to all`,\n        DataLink: `Frame: Data encapsulated for transmission`,\n        Physical: `Bits transmitted over network`\n      };\n      setPacketFlow(newPacketFlow);\n    });\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Anonymous Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), !isUsernameSet && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Choose a username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Enter your username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSetUsername,\n        children: \"Set Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), isUsernameSet && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          border: '1px solid #ddd',\n          padding: '10px',\n          maxHeight: '200px',\n          overflowY: 'scroll'\n        },\n        children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this), \" \", msg.message]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PacketVisualization, {\n        packetFlow: packetFlow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"xfI1ZOg9osjK9Jh0RNvcjn/oDhw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","PacketVisualization","jsxDEV","_jsxDEV","socket","App","_s","username","setUsername","message","setMessage","messages","setMessages","packetFlow","setPacketFlow","isUsernameSet","setIsUsernameSet","handleSendMessage","trim","msg","sender","receiver","emit","handleSetUsername","on","data","prev","newPacketFlow","Application","Transport","Network","DataLink","Physical","off","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","style","border","padding","maxHeight","overflowY","map","idx","_c","$RefreshReg$"],"sources":["D:/Anonymous chat app/anonymous-chat/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport PacketVisualization from './PacketVisualization';\n\n// Connect to backend server\nconst socket = io('http://localhost:3001');\n\nconst App = () => {\n    const [username, setUsername] = useState('');\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [packetFlow, setPacketFlow] = useState({});\n    const [isUsernameSet, setIsUsernameSet] = useState(false);\n\n    const handleSendMessage = () => {\n        if (!message.trim()) return;\n\n        const msg = { sender: username, receiver: 'all', message };\n        socket.emit('sendMessage', msg);\n        setMessage('');\n    };\n\n    const handleSetUsername = () => {\n        if (username.trim()) {\n            setIsUsernameSet(true);\n        }\n    };\n\n    useEffect(() => {\n        socket.on('receiveMessage', (data) => {\n            setMessages((prev) => [...prev, data]);\n\n            const newPacketFlow = {\n                Application: `Message received: \"${data.message}\"`,\n                Transport: `Source port: 3001, Dest port: 8080`,\n                Network: `IP Packet from ${data.sender} to all`,\n                DataLink: `Frame: Data encapsulated for transmission`,\n                Physical: `Bits transmitted over network`,\n            };\n\n            setPacketFlow(newPacketFlow);\n        });\n\n        return () => {\n            socket.off('receiveMessage');\n        };\n    }, []);\n\n    return (\n        <div>\n            <h1>Anonymous Chat</h1>\n\n            {/* Username Input Screen */}\n            {!isUsernameSet && (\n                <div>\n                    <h2>Choose a username</h2>\n                    <input\n                        type=\"text\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                        placeholder=\"Enter your username\"\n                    />\n                    <button onClick={handleSetUsername}>Set Username</button>\n                </div>\n            )}\n\n            {/* Chat Interface */}\n            {isUsernameSet && (\n                <div>\n                    <div style={{ border: '1px solid #ddd', padding: '10px', maxHeight: '200px', overflowY: 'scroll' }}>\n                        {messages.map((msg, idx) => (\n                            <p key={idx}>\n                                <strong>{msg.sender}:</strong> {msg.message}\n                            </p>\n                        ))}\n                    </div>\n                    <input\n                        type=\"text\"\n                        value={message}\n                        onChange={(e) => setMessage(e.target.value)}\n                        placeholder=\"Type your message...\"\n                    />\n                    <button onClick={handleSendMessage}>Send</button>\n\n                    <PacketVisualization packetFlow={packetFlow} />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,mBAAmB,MAAM,uBAAuB;;AAEvD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAGJ,EAAE,CAAC,uBAAuB,CAAC;AAE1C,MAAMK,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACiB,aAAa,EAAEC,gBAAgB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMmB,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAI,CAACR,OAAO,CAACS,IAAI,CAAC,CAAC,EAAE;IAErB,MAAMC,GAAG,GAAG;MAAEC,MAAM,EAAEb,QAAQ;MAAEc,QAAQ,EAAE,KAAK;MAAEZ;IAAQ,CAAC;IAC1DL,MAAM,CAACkB,IAAI,CAAC,aAAa,EAAEH,GAAG,CAAC;IAC/BT,UAAU,CAAC,EAAE,CAAC;EAClB,CAAC;EAED,MAAMa,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAIhB,QAAQ,CAACW,IAAI,CAAC,CAAC,EAAE;MACjBF,gBAAgB,CAAC,IAAI,CAAC;IAC1B;EACJ,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACZK,MAAM,CAACoB,EAAE,CAAC,gBAAgB,EAAGC,IAAI,IAAK;MAClCb,WAAW,CAAEc,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,IAAI,CAAC,CAAC;MAEtC,MAAME,aAAa,GAAG;QAClBC,WAAW,EAAE,sBAAsBH,IAAI,CAAChB,OAAO,GAAG;QAClDoB,SAAS,EAAE,oCAAoC;QAC/CC,OAAO,EAAE,kBAAkBL,IAAI,CAACL,MAAM,SAAS;QAC/CW,QAAQ,EAAE,2CAA2C;QACrDC,QAAQ,EAAE;MACd,CAAC;MAEDlB,aAAa,CAACa,aAAa,CAAC;IAChC,CAAC,CAAC;IAEF,OAAO,MAAM;MACTvB,MAAM,CAAC6B,GAAG,CAAC,gBAAgB,CAAC;IAChC,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI9B,OAAA;IAAA+B,QAAA,gBACI/B,OAAA;MAAA+B,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGtB,CAACvB,aAAa,iBACXZ,OAAA;MAAA+B,QAAA,gBACI/B,OAAA;QAAA+B,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1BnC,OAAA;QACIoC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEjC,QAAS;QAChBkC,QAAQ,EAAGC,CAAC,IAAKlC,WAAW,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC7CI,WAAW,EAAC;MAAqB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACFnC,OAAA;QAAQ0C,OAAO,EAAEtB,iBAAkB;QAAAW,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CACR,EAGAvB,aAAa,iBACVZ,OAAA;MAAA+B,QAAA,gBACI/B,OAAA;QAAK2C,KAAK,EAAE;UAAEC,MAAM,EAAE,gBAAgB;UAAEC,OAAO,EAAE,MAAM;UAAEC,SAAS,EAAE,OAAO;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAAhB,QAAA,EAC9FvB,QAAQ,CAACwC,GAAG,CAAC,CAAChC,GAAG,EAAEiC,GAAG,kBACnBjD,OAAA;UAAA+B,QAAA,gBACI/B,OAAA;YAAA+B,QAAA,GAASf,GAAG,CAACC,MAAM,EAAC,GAAC;UAAA;YAAAe,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACnB,GAAG,CAACV,OAAO;QAAA,GADvC2C,GAAG;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAER,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNnC,OAAA;QACIoC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE/B,OAAQ;QACfgC,QAAQ,EAAGC,CAAC,IAAKhC,UAAU,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC5CI,WAAW,EAAC;MAAsB;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACFnC,OAAA;QAAQ0C,OAAO,EAAE5B,iBAAkB;QAAAiB,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAEjDnC,OAAA,CAACF,mBAAmB;QAACY,UAAU,EAAEA;MAAW;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAChC,EAAA,CAlFID,GAAG;AAAAgD,EAAA,GAAHhD,GAAG;AAoFT,eAAeA,GAAG;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}