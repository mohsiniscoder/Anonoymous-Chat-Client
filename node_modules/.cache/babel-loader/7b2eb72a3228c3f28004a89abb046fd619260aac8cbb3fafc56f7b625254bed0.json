{"ast":null,"code":"var _jsxFileName = \"D:\\\\Anonymous chat app\\\\anonymous-chat\\\\client\\\\src\\\\PacketVisualization.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './PacketVisualization.css'; // Import CSS for styling and animations\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PacketVisualization = () => {\n  _s();\n  const [currentLayer, setCurrentLayer] = useState(0);\n  const layers = ['Application Layer (HTTP)', 'Presentation Layer', 'Session Layer', 'Transport Layer (TCP/UDP)', 'Network Layer (IP)', 'Data Link Layer (Frame)', 'Physical Layer'];\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      setCurrentLayer(prevLayer => (prevLayer + 1) % layers.length);\n    }, 1000); // Change layer every second\n\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"packet-visualization\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Packet Transfer Through OSI Layers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"osi-layers\",\n      children: layers.map((layer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `osi-layer ${currentLayer === index ? 'active' : ''}`,\n        children: layer\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"packet\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `packet-animation ${layers[currentLayer]}`,\n        children: \"Packet Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(PacketVisualization, \"V+/ZEx66QzP8n0MlzNFQ+ep4+C4=\");\n_c = PacketVisualization;\nexport default PacketVisualization;\nvar _c;\n$RefreshReg$(_c, \"PacketVisualization\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PacketVisualization","_s","currentLayer","setCurrentLayer","layers","intervalId","setInterval","prevLayer","length","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","layer","index","_c","$RefreshReg$"],"sources":["D:/Anonymous chat app/anonymous-chat/client/src/PacketVisualization.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './PacketVisualization.css'; // Import CSS for styling and animations\r\n\r\nconst PacketVisualization = () => {\r\n  const [currentLayer, setCurrentLayer] = useState(0);\r\n  const layers = [\r\n    'Application Layer (HTTP)',\r\n    'Presentation Layer',\r\n    'Session Layer',\r\n    'Transport Layer (TCP/UDP)',\r\n    'Network Layer (IP)',\r\n    'Data Link Layer (Frame)',\r\n    'Physical Layer'\r\n  ];\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setCurrentLayer((prevLayer) => (prevLayer + 1) % layers.length);\r\n    }, 1000); // Change layer every second\r\n\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"packet-visualization\">\r\n      <h3>Packet Transfer Through OSI Layers</h3>\r\n      <div className=\"osi-layers\">\r\n        {layers.map((layer, index) => (\r\n          <div\r\n            key={index}\r\n            className={`osi-layer ${currentLayer === index ? 'active' : ''}`}\r\n          >\r\n            {layer}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div className=\"packet\">\r\n        <div className={`packet-animation ${layers[currentLayer]}`}>\r\n          Packet Data\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PacketVisualization;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,2BAA2B,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAMO,MAAM,GAAG,CACb,0BAA0B,EAC1B,oBAAoB,EACpB,eAAe,EACf,2BAA2B,EAC3B,oBAAoB,EACpB,yBAAyB,EACzB,gBAAgB,CACjB;EAEDR,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCH,eAAe,CAAEI,SAAS,IAAK,CAACA,SAAS,GAAG,CAAC,IAAIH,MAAM,CAACI,MAAM,CAAC;IACjE,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAMC,aAAa,CAACJ,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAKW,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnCZ,OAAA;MAAAY,QAAA,EAAI;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3ChB,OAAA;MAAKW,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBP,MAAM,CAACY,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvBnB,OAAA;QAEEW,SAAS,EAAE,aAAaR,YAAY,KAAKgB,KAAK,GAAG,QAAQ,GAAG,EAAE,EAAG;QAAAP,QAAA,EAEhEM;MAAK,GAHDC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNhB,OAAA;MAAKW,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACrBZ,OAAA;QAAKW,SAAS,EAAE,oBAAoBN,MAAM,CAACF,YAAY,CAAC,EAAG;QAAAS,QAAA,EAAC;MAE5D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CAxCID,mBAAmB;AAAAmB,EAAA,GAAnBnB,mBAAmB;AA0CzB,eAAeA,mBAAmB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}