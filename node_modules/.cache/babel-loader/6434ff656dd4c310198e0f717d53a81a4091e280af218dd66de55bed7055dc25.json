{"ast":null,"code":"var _jsxFileName = \"D:\\\\Anonymous chat app\\\\anonymous-chat\\\\client\\\\src\\\\PacketVisualization.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PacketVisualization = ({\n  packetFlow\n}) => {\n  _s();\n  useEffect(() => {\n    if (!packetFlow || Object.keys(packetFlow).length === 0) return;\n    const svg = d3.select('#packet-visualization');\n    svg.selectAll('*').remove(); // Clear previous visuals\n\n    const data = Object.entries(packetFlow);\n    const width = 800;\n    const height = 200;\n\n    // Dynamic scaling\n    const xScale = d3.scalePoint().domain(data.map((_, i) => i)).range([50, width - 50]);\n\n    // Render circles to represent layers\n    svg.selectAll('circle').data(data).enter().append('circle').attr('cx', (_, i) => xScale(i)).attr('cy', height / 2).attr('r', 30).attr('fill', 'blue');\n\n    // Add text labels to circles\n    svg.selectAll('text').data(data).enter().append('text').attr('x', (_, i) => xScale(i)).attr('y', height / 2).attr('dy', '.35em').attr('text-anchor', 'middle').attr('fill', 'white').text(([layer, content]) => layer);\n\n    // Add connection lines\n    svg.selectAll('line').data(data.slice(1)).enter().append('line').attr('x1', (_, i) => xScale(i)).attr('y1', height / 2).attr('x2', (_, i) => xScale(i + 1)).attr('y2', height / 2).attr('stroke', 'gray').attr('stroke-width', 2);\n  }, [packetFlow]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Packet Flow Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      id: \"packet-visualization\",\n      width: \"800\",\n      height: \"200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(PacketVisualization, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = PacketVisualization;\nexport default PacketVisualization;\nvar _c;\n$RefreshReg$(_c, \"PacketVisualization\");","map":{"version":3,"names":["React","useEffect","d3","jsxDEV","_jsxDEV","PacketVisualization","packetFlow","_s","Object","keys","length","svg","select","selectAll","remove","data","entries","width","height","xScale","scalePoint","domain","map","_","i","range","enter","append","attr","text","layer","content","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["D:/Anonymous chat app/anonymous-chat/client/src/PacketVisualization.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nconst PacketVisualization = ({ packetFlow }) => {\r\n    useEffect(() => {\r\n        if (!packetFlow || Object.keys(packetFlow).length === 0) return;\r\n\r\n        const svg = d3.select('#packet-visualization');\r\n        svg.selectAll('*').remove(); // Clear previous visuals\r\n\r\n        const data = Object.entries(packetFlow);\r\n        const width = 800;\r\n        const height = 200;\r\n\r\n        // Dynamic scaling\r\n        const xScale = d3.scalePoint()\r\n            .domain(data.map((_, i) => i))\r\n            .range([50, width - 50]);\r\n\r\n        // Render circles to represent layers\r\n        svg.selectAll('circle')\r\n            .data(data)\r\n            .enter()\r\n            .append('circle')\r\n            .attr('cx', (_, i) => xScale(i))\r\n            .attr('cy', height / 2)\r\n            .attr('r', 30)\r\n            .attr('fill', 'blue');\r\n\r\n        // Add text labels to circles\r\n        svg.selectAll('text')\r\n            .data(data)\r\n            .enter()\r\n            .append('text')\r\n            .attr('x', (_, i) => xScale(i))\r\n            .attr('y', height / 2)\r\n            .attr('dy', '.35em')\r\n            .attr('text-anchor', 'middle')\r\n            .attr('fill', 'white')\r\n            .text(([layer, content]) => layer);\r\n\r\n        // Add connection lines\r\n        svg.selectAll('line')\r\n            .data(data.slice(1))\r\n            .enter()\r\n            .append('line')\r\n            .attr('x1', (_, i) => xScale(i))\r\n            .attr('y1', height / 2)\r\n            .attr('x2', (_, i) => xScale(i + 1))\r\n            .attr('y2', height / 2)\r\n            .attr('stroke', 'gray')\r\n            .attr('stroke-width', 2);\r\n    }, [packetFlow]);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Packet Flow Visualization</h2>\r\n            <svg id=\"packet-visualization\" width=\"800\" height=\"200\"></svg>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PacketVisualization;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}