{"ast":null,"code":"var _jsxFileName = \"D:\\\\Anonymous chat app\\\\anonymous-chat\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport PacketVisualization from './PacketVisualization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nconst App = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [isUsernameSet, setIsUsernameSet] = useState(false);\n  const [packetData, setPacketData] = useState([]);\n  const handleSetUsername = () => {\n    if (username.trim()) {\n      setIsUsernameSet(true);\n    }\n  };\n  useEffect(() => {\n    socket.on('packetData', data => {\n      setPacketData(prev => [...prev, data]);\n    });\n    return () => {\n      socket.off('packetData');\n    };\n  }, []);\n  const startCapture = () => {\n    socket.emit('startPacketCapture', 'tcp'); // Example filter: capture TCP packets\n  };\n  const stopCapture = () => {\n    socket.emit('stopPacketCapture');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Packet Visualization\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), !isUsernameSet && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Choose a username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        placeholder: \"Enter your username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSetUsername,\n        children: \"Set Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), isUsernameSet && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startCapture,\n        children: \"Start Packet Capture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopCapture,\n        children: \"Stop Packet Capture\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PacketVisualization, {\n        packetData: packetData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"vEG8XxOvv7l5JbPHuwA5Cvi2jOI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","PacketVisualization","jsxDEV","_jsxDEV","socket","App","_s","username","setUsername","isUsernameSet","setIsUsernameSet","packetData","setPacketData","handleSetUsername","trim","on","data","prev","off","startCapture","emit","stopCapture","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/Anonymous chat app/anonymous-chat/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport PacketVisualization from './PacketVisualization';\n\nconst socket = io('http://localhost:3001');\n\nconst App = () => {\n    const [username, setUsername] = useState('');\n    const [isUsernameSet, setIsUsernameSet] = useState(false);\n    const [packetData, setPacketData] = useState([]);\n\n    const handleSetUsername = () => {\n        if (username.trim()) {\n            setIsUsernameSet(true);\n        }\n    };\n\n    useEffect(() => {\n        socket.on('packetData', (data) => {\n            setPacketData((prev) => [...prev, data]);\n        });\n\n        return () => {\n            socket.off('packetData');\n        };\n    }, []);\n\n    const startCapture = () => {\n        socket.emit('startPacketCapture', 'tcp'); // Example filter: capture TCP packets\n    };\n\n    const stopCapture = () => {\n        socket.emit('stopPacketCapture');\n    };\n\n    return (\n        <div>\n            <h1>Packet Visualization</h1>\n\n            {!isUsernameSet && (\n                <div>\n                    <h2>Choose a username</h2>\n                    <input\n                        type=\"text\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                        placeholder=\"Enter your username\"\n                    />\n                    <button onClick={handleSetUsername}>Set Username</button>\n                </div>\n            )}\n\n            {isUsernameSet && (\n                <div>\n                    <button onClick={startCapture}>Start Packet Capture</button>\n                    <button onClick={stopCapture}>Stop Packet Capture</button>\n                    <PacketVisualization packetData={packetData} />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}