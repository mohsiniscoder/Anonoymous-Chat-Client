{"ast":null,"code":"var _jsxFileName = \"D:\\\\Anonymous chat app\\\\anonymous-chat\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport PacketVisualization from './PacketVisualization';\n\n// Connect to the server\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001');\nconst App = () => {\n  _s();\n  const [packetData, setPacketData] = useState([]);\n  const [username, setUsername] = useState('');\n  const [isUsernameSet, setIsUsernameSet] = useState(false);\n  const handleSetUsername = () => {\n    if (username.trim()) {\n      setIsUsernameSet(true);\n    }\n  };\n  useEffect(() => {\n    // Listen for packet data from the server\n    socket.on('packetData', packet => {\n      setPacketData(prevData => [...prevData, packet]); // Append new packet data\n    });\n    return () => {\n      socket.off('packetData'); // Clean up the listener on unmount\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      padding: '20px'\n    },\n    children: !isUsernameSet ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enter your username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        style: {\n          padding: '10px',\n          marginBottom: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSetUsername,\n        style: {\n          padding: '10px'\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Welcome, \", username, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Real-Time Packet Capture Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(PacketVisualization, {\n        packetData: packetData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"B9Psl4pGZAfg70SV/ZKa5zhO+Kw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","PacketVisualization","jsxDEV","_jsxDEV","socket","App","_s","packetData","setPacketData","username","setUsername","isUsernameSet","setIsUsernameSet","handleSetUsername","trim","on","packet","prevData","off","style","fontFamily","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","marginBottom","onClick","_c","$RefreshReg$"],"sources":["D:/Anonymous chat app/anonymous-chat/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport PacketVisualization from './PacketVisualization';\n\n// Connect to the server\nconst socket = io('http://localhost:3001');\n\nconst App = () => {\n    const [packetData, setPacketData] = useState([]);\n    const [username, setUsername] = useState('');\n    const [isUsernameSet, setIsUsernameSet] = useState(false);\n\n    const handleSetUsername = () => {\n        if (username.trim()) {\n            setIsUsernameSet(true);\n        }\n    };\n\n    useEffect(() => {\n        // Listen for packet data from the server\n        socket.on('packetData', (packet) => {\n            setPacketData((prevData) => [...prevData, packet]); // Append new packet data\n        });\n\n        return () => {\n            socket.off('packetData'); // Clean up the listener on unmount\n        };\n    }, []);\n\n    return (\n        <div style={{ fontFamily: 'Arial, sans-serif', padding: '20px' }}>\n            {!isUsernameSet ? (\n                <div>\n                    <h2>Enter your username</h2>\n                    <input\n                        type=\"text\"\n                        placeholder=\"Enter username\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                        style={{ padding: '10px', marginBottom: '10px' }}\n                    />\n                    <button onClick={handleSetUsername} style={{ padding: '10px' }}>\n                        Submit\n                    </button>\n                </div>\n            ) : (\n                <div>\n                    <h2>Welcome, {username}!</h2>\n                    <h3>Real-Time Packet Capture Visualization</h3>\n                    <PacketVisualization packetData={packetData} />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}