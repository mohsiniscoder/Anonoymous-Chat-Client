{"ast":null,"code":"var _jsxFileName = \"D:\\\\Anonymous chat app\\\\anonymous-chat\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport PacketVisualization from './PacketVisualization';\n\n// Initialize the socket (replace with your backend URL)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000');\nconst App = () => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [packetFlow, setPacketFlow] = useState({});\n  const handleSendMessage = () => {\n    if (!message.trim()) return;\n    const msg = {\n      sender: socket.id,\n      receiver: 'all',\n      message\n    };\n    const newPacketFlow = {\n      Application: `Message sent: \"${message}\"`,\n      Transport: `Source port: 8080, Dest port: 3001`,\n      Network: `IP Packet from ${socket.id} to all`,\n      DataLink: `Frame: Data encapsulated for transmission`,\n      Physical: `Bits transmitted over network`\n    };\n    setPacketFlow(newPacketFlow);\n    socket.emit('sendMessage', msg);\n    setMessage('');\n  };\n  useEffect(() => {\n    socket.on('receiveMessage', data => {\n      setMessages(prev => [...prev, data]);\n      const newPacketFlow = {\n        Application: `Message received: \"${data.message}\"`,\n        Transport: `Source port: 3001, Dest port: 8080`,\n        Network: `IP Packet from ${data.sender} to ${socket.id}`,\n        DataLink: `Frame: Data encapsulated for transmission`,\n        Physical: `Bits transmitted over network`\n      };\n      setPacketFlow(newPacketFlow);\n    });\n    return () => {\n      socket.off('receiveMessage');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Anonymous Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ddd',\n        padding: '10px',\n        maxHeight: '200px',\n        overflowY: 'scroll'\n      },\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), \" \", msg.message]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: message,\n      onChange: e => setMessage(e.target.value),\n      placeholder: \"Type your message...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PacketVisualization, {\n      packetFlow: packetFlow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"FJavSty8lJybw+2dcA7MHOvjFVs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","PacketVisualization","jsxDEV","_jsxDEV","socket","App","_s","message","setMessage","messages","setMessages","packetFlow","setPacketFlow","handleSendMessage","trim","msg","sender","id","receiver","newPacketFlow","Application","Transport","Network","DataLink","Physical","emit","on","data","prev","off","children","fileName","_jsxFileName","lineNumber","columnNumber","style","border","padding","maxHeight","overflowY","map","idx","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["D:/Anonymous chat app/anonymous-chat/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport PacketVisualization from './PacketVisualization';\n\n// Initialize the socket (replace with your backend URL)\nconst socket = io('http://localhost:5000');\n\nconst App = () => {\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [packetFlow, setPacketFlow] = useState({});\n\n    const handleSendMessage = () => {\n        if (!message.trim()) return;\n\n        const msg = { sender: socket.id, receiver: 'all', message };\n        const newPacketFlow = {\n            Application: `Message sent: \"${message}\"`,\n            Transport: `Source port: 8080, Dest port: 3001`,\n            Network: `IP Packet from ${socket.id} to all`,\n            DataLink: `Frame: Data encapsulated for transmission`,\n            Physical: `Bits transmitted over network`,\n        };\n\n        setPacketFlow(newPacketFlow);\n        socket.emit('sendMessage', msg);\n        setMessage('');\n    };\n\n    useEffect(() => {\n        socket.on('receiveMessage', (data) => {\n            setMessages((prev) => [...prev, data]);\n\n            const newPacketFlow = {\n                Application: `Message received: \"${data.message}\"`,\n                Transport: `Source port: 3001, Dest port: 8080`,\n                Network: `IP Packet from ${data.sender} to ${socket.id}`,\n                DataLink: `Frame: Data encapsulated for transmission`,\n                Physical: `Bits transmitted over network`,\n            };\n\n            setPacketFlow(newPacketFlow);\n        });\n\n        return () => {\n            socket.off('receiveMessage');\n        };\n    }, []);\n\n    return (\n        <div>\n            <h1>Anonymous Chat</h1>\n            <div style={{ border: '1px solid #ddd', padding: '10px', maxHeight: '200px', overflowY: 'scroll' }}>\n                {messages.map((msg, idx) => (\n                    <p key={idx}>\n                        <strong>{msg.sender}:</strong> {msg.message}\n                    </p>\n                ))}\n            </div>\n            <input\n                type=\"text\"\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                placeholder=\"Type your message...\"\n            />\n            <button onClick={handleSendMessage}>Send</button>\n\n            <PacketVisualization packetFlow={packetFlow} />\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}