{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.patchAdapter = patchAdapter;\nexports.restoreAdapter = restoreAdapter;\nexports.serveFile = serveFile;\nconst socket_io_adapter_1 = require(\"socket.io-adapter\");\nconst fs_1 = require(\"fs\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = (0, debug_1.default)(\"socket.io:adapter-uws\");\nconst SEPARATOR = \"\\x1f\"; // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst {\n  addAll,\n  del,\n  broadcast\n} = socket_io_adapter_1.Adapter.prototype;\nfunction patchAdapter(app /* : TemplatedApp */) {\n  socket_io_adapter_1.Adapter.prototype.addAll = function (id, rooms) {\n    const isNew = !this.sids.has(id);\n    addAll.call(this, id, rooms);\n    const socket = this.nsp.sockets.get(id) || this.nsp._preConnectSockets.get(id);\n    if (!socket) {\n      return;\n    }\n    if (socket.conn.transport.name === \"websocket\") {\n      subscribe(this.nsp.name, socket, isNew, rooms);\n      return;\n    }\n    if (isNew) {\n      socket.conn.on(\"upgrade\", () => {\n        const rooms = this.sids.get(id);\n        if (rooms) {\n          subscribe(this.nsp.name, socket, isNew, rooms);\n        }\n      });\n    }\n  };\n  socket_io_adapter_1.Adapter.prototype.del = function (id, room) {\n    del.call(this, id, room);\n    const socket = this.nsp.sockets.get(id) || this.nsp._preConnectSockets.get(id);\n    if (socket && socket.conn.transport.name === \"websocket\") {\n      // @ts-ignore\n      const sessionId = socket.conn.id;\n      // @ts-ignore\n      const websocket = socket.conn.transport.socket;\n      const topic = `${this.nsp.name}${SEPARATOR}${room}`;\n      debug(\"unsubscribe connection %s from topic %s\", sessionId, topic);\n      websocket.unsubscribe(topic);\n    }\n  };\n  socket_io_adapter_1.Adapter.prototype.broadcast = function (packet, opts) {\n    const useFastPublish = opts.rooms.size <= 1 && opts.except.size === 0;\n    if (!useFastPublish) {\n      broadcast.call(this, packet, opts);\n      return;\n    }\n    const flags = opts.flags || {};\n    const basePacketOpts = {\n      preEncoded: true,\n      volatile: flags.volatile,\n      compress: flags.compress\n    };\n    packet.nsp = this.nsp.name;\n    const encodedPackets = this.encoder.encode(packet);\n    const topic = opts.rooms.size === 0 ? this.nsp.name : `${this.nsp.name}${SEPARATOR}${opts.rooms.keys().next().value}`;\n    debug(\"fast publish to %s\", topic);\n    // fast publish for clients connected with WebSocket\n    encodedPackets.forEach(encodedPacket => {\n      const isBinary = typeof encodedPacket !== \"string\";\n      // \"4\" being the message type in the Engine.IO protocol, see https://github.com/socketio/engine.io-protocol\n      app.publish(topic, isBinary ? encodedPacket : \"4\" + encodedPacket, isBinary);\n    });\n    this.apply(opts, socket => {\n      if (socket.conn.transport.name !== \"websocket\") {\n        // classic publish for clients connected with HTTP long-polling\n        socket.client.writeToEngine(encodedPackets, basePacketOpts);\n      }\n    });\n  };\n}\nfunction subscribe(namespaceName, socket, isNew, rooms) {\n  // @ts-ignore\n  const sessionId = socket.conn.id;\n  // @ts-ignore\n  const websocket = socket.conn.transport.socket;\n  if (isNew) {\n    debug(\"subscribe connection %s to topic %s\", sessionId, namespaceName);\n    websocket.subscribe(namespaceName);\n  }\n  rooms.forEach(room => {\n    const topic = `${namespaceName}${SEPARATOR}${room}`; // '#' can be used as wildcard\n    debug(\"subscribe connection %s to topic %s\", sessionId, topic);\n    websocket.subscribe(topic);\n  });\n}\nfunction restoreAdapter() {\n  socket_io_adapter_1.Adapter.prototype.addAll = addAll;\n  socket_io_adapter_1.Adapter.prototype.del = del;\n  socket_io_adapter_1.Adapter.prototype.broadcast = broadcast;\n}\nconst toArrayBuffer = buffer => {\n  const {\n    buffer: arrayBuffer,\n    byteOffset,\n    byteLength\n  } = buffer;\n  return arrayBuffer.slice(byteOffset, byteOffset + byteLength);\n};\n// imported from https://github.com/kolodziejczak-sz/uwebsocket-serve\nfunction serveFile(res /* : HttpResponse */, filepath) {\n  const {\n    size\n  } = (0, fs_1.statSync)(filepath);\n  const readStream = (0, fs_1.createReadStream)(filepath);\n  const destroyReadStream = () => !readStream.destroyed && readStream.destroy();\n  const onError = error => {\n    destroyReadStream();\n    throw error;\n  };\n  const onDataChunk = chunk => {\n    const arrayBufferChunk = toArrayBuffer(chunk);\n    res.cork(() => {\n      const lastOffset = res.getWriteOffset();\n      const [ok, done] = res.tryEnd(arrayBufferChunk, size);\n      if (!done && !ok) {\n        readStream.pause();\n        res.onWritable(offset => {\n          const [ok, done] = res.tryEnd(arrayBufferChunk.slice(offset - lastOffset), size);\n          if (!done && ok) {\n            readStream.resume();\n          }\n          return ok;\n        });\n      }\n    });\n  };\n  res.onAborted(destroyReadStream);\n  readStream.on(\"data\", onDataChunk).on(\"error\", onError).on(\"end\", destroyReadStream);\n}","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","patchAdapter","restoreAdapter","serveFile","socket_io_adapter_1","require","fs_1","debug_1","debug","default","SEPARATOR","addAll","del","broadcast","Adapter","prototype","app","id","rooms","isNew","sids","has","call","socket","nsp","sockets","get","_preConnectSockets","conn","transport","name","subscribe","on","room","sessionId","websocket","topic","unsubscribe","packet","opts","useFastPublish","size","except","flags","basePacketOpts","preEncoded","volatile","compress","encodedPackets","encoder","encode","keys","next","forEach","encodedPacket","isBinary","publish","apply","client","writeToEngine","namespaceName","toArrayBuffer","buffer","arrayBuffer","byteOffset","byteLength","slice","res","filepath","statSync","readStream","createReadStream","destroyReadStream","destroyed","destroy","onError","error","onDataChunk","chunk","arrayBufferChunk","cork","lastOffset","getWriteOffset","ok","done","tryEnd","pause","onWritable","offset","resume","onAborted"],"sources":["D:/Anonymous chat app/anonymous-chat/node_modules/socket.io/dist/uws.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.patchAdapter = patchAdapter;\nexports.restoreAdapter = restoreAdapter;\nexports.serveFile = serveFile;\nconst socket_io_adapter_1 = require(\"socket.io-adapter\");\nconst fs_1 = require(\"fs\");\nconst debug_1 = __importDefault(require(\"debug\"));\nconst debug = (0, debug_1.default)(\"socket.io:adapter-uws\");\nconst SEPARATOR = \"\\x1f\"; // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst { addAll, del, broadcast } = socket_io_adapter_1.Adapter.prototype;\nfunction patchAdapter(app /* : TemplatedApp */) {\n    socket_io_adapter_1.Adapter.prototype.addAll = function (id, rooms) {\n        const isNew = !this.sids.has(id);\n        addAll.call(this, id, rooms);\n        const socket = this.nsp.sockets.get(id) || this.nsp._preConnectSockets.get(id);\n        if (!socket) {\n            return;\n        }\n        if (socket.conn.transport.name === \"websocket\") {\n            subscribe(this.nsp.name, socket, isNew, rooms);\n            return;\n        }\n        if (isNew) {\n            socket.conn.on(\"upgrade\", () => {\n                const rooms = this.sids.get(id);\n                if (rooms) {\n                    subscribe(this.nsp.name, socket, isNew, rooms);\n                }\n            });\n        }\n    };\n    socket_io_adapter_1.Adapter.prototype.del = function (id, room) {\n        del.call(this, id, room);\n        const socket = this.nsp.sockets.get(id) || this.nsp._preConnectSockets.get(id);\n        if (socket && socket.conn.transport.name === \"websocket\") {\n            // @ts-ignore\n            const sessionId = socket.conn.id;\n            // @ts-ignore\n            const websocket = socket.conn.transport.socket;\n            const topic = `${this.nsp.name}${SEPARATOR}${room}`;\n            debug(\"unsubscribe connection %s from topic %s\", sessionId, topic);\n            websocket.unsubscribe(topic);\n        }\n    };\n    socket_io_adapter_1.Adapter.prototype.broadcast = function (packet, opts) {\n        const useFastPublish = opts.rooms.size <= 1 && opts.except.size === 0;\n        if (!useFastPublish) {\n            broadcast.call(this, packet, opts);\n            return;\n        }\n        const flags = opts.flags || {};\n        const basePacketOpts = {\n            preEncoded: true,\n            volatile: flags.volatile,\n            compress: flags.compress,\n        };\n        packet.nsp = this.nsp.name;\n        const encodedPackets = this.encoder.encode(packet);\n        const topic = opts.rooms.size === 0\n            ? this.nsp.name\n            : `${this.nsp.name}${SEPARATOR}${opts.rooms.keys().next().value}`;\n        debug(\"fast publish to %s\", topic);\n        // fast publish for clients connected with WebSocket\n        encodedPackets.forEach((encodedPacket) => {\n            const isBinary = typeof encodedPacket !== \"string\";\n            // \"4\" being the message type in the Engine.IO protocol, see https://github.com/socketio/engine.io-protocol\n            app.publish(topic, isBinary ? encodedPacket : \"4\" + encodedPacket, isBinary);\n        });\n        this.apply(opts, (socket) => {\n            if (socket.conn.transport.name !== \"websocket\") {\n                // classic publish for clients connected with HTTP long-polling\n                socket.client.writeToEngine(encodedPackets, basePacketOpts);\n            }\n        });\n    };\n}\nfunction subscribe(namespaceName, socket, isNew, rooms) {\n    // @ts-ignore\n    const sessionId = socket.conn.id;\n    // @ts-ignore\n    const websocket = socket.conn.transport.socket;\n    if (isNew) {\n        debug(\"subscribe connection %s to topic %s\", sessionId, namespaceName);\n        websocket.subscribe(namespaceName);\n    }\n    rooms.forEach((room) => {\n        const topic = `${namespaceName}${SEPARATOR}${room}`; // '#' can be used as wildcard\n        debug(\"subscribe connection %s to topic %s\", sessionId, topic);\n        websocket.subscribe(topic);\n    });\n}\nfunction restoreAdapter() {\n    socket_io_adapter_1.Adapter.prototype.addAll = addAll;\n    socket_io_adapter_1.Adapter.prototype.del = del;\n    socket_io_adapter_1.Adapter.prototype.broadcast = broadcast;\n}\nconst toArrayBuffer = (buffer) => {\n    const { buffer: arrayBuffer, byteOffset, byteLength } = buffer;\n    return arrayBuffer.slice(byteOffset, byteOffset + byteLength);\n};\n// imported from https://github.com/kolodziejczak-sz/uwebsocket-serve\nfunction serveFile(res /* : HttpResponse */, filepath) {\n    const { size } = (0, fs_1.statSync)(filepath);\n    const readStream = (0, fs_1.createReadStream)(filepath);\n    const destroyReadStream = () => !readStream.destroyed && readStream.destroy();\n    const onError = (error) => {\n        destroyReadStream();\n        throw error;\n    };\n    const onDataChunk = (chunk) => {\n        const arrayBufferChunk = toArrayBuffer(chunk);\n        res.cork(() => {\n            const lastOffset = res.getWriteOffset();\n            const [ok, done] = res.tryEnd(arrayBufferChunk, size);\n            if (!done && !ok) {\n                readStream.pause();\n                res.onWritable((offset) => {\n                    const [ok, done] = res.tryEnd(arrayBufferChunk.slice(offset - lastOffset), size);\n                    if (!done && ok) {\n                        readStream.resume();\n                    }\n                    return ok;\n                });\n            }\n        });\n    };\n    res.onAborted(destroyReadStream);\n    readStream\n        .on(\"data\", onDataChunk)\n        .on(\"error\", onError)\n        .on(\"end\", destroyReadStream);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}